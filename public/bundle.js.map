{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal.mjs","../src/components/Cell.svelte","../src/components/Board.svelte","../src/components/Setup.svelte","../src/components/Score.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() {}\n\nconst identity = x => x;\n\nfunction assign(tar, src) {\n\tfor (const k in src) tar[k] = src[k];\n\treturn tar;\n}\n\nfunction is_promise(value) {\n\treturn value && typeof value.then === 'function';\n}\n\nfunction add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nfunction run(fn) {\n\treturn fn();\n}\n\nfunction blank_object() {\n\treturn Object.create(null);\n}\n\nfunction run_all(fns) {\n\tfns.forEach(run);\n}\n\nfunction is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nfunction safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\n\nfunction not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\nfunction validate_store(store, name) {\n\tif (!store || typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nfunction subscribe(component, store, callback) {\n\tconst unsub = store.subscribe(callback);\n\n\tcomponent.$$.on_destroy.push(unsub.unsubscribe\n\t\t? () => unsub.unsubscribe()\n\t\t: unsub);\n}\n\nfunction create_slot(definition, ctx, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n\t\t: ctx.$$scope.ctx;\n}\n\nfunction get_slot_changes(definition, ctx, changed, fn) {\n\treturn definition[1]\n\t\t? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n\t\t: ctx.$$scope.changed || {};\n}\n\nfunction exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\nlet now = typeof window !== 'undefined'\n\t? () => window.performance.now()\n\t: () => Date.now();\n\n// used internally for testing\nfunction set_now(fn) {\n\tnow = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\n\nfunction run_tasks() {\n\ttasks.forEach(task => {\n\t\tif (!task[0](now())) {\n\t\t\ttasks.delete(task);\n\t\t\ttask[1]();\n\t\t}\n\t});\n\n\trunning = tasks.size > 0;\n\tif (running) requestAnimationFrame(run_tasks);\n}\n\nfunction clear_loops() {\n\t// for testing...\n\ttasks.forEach(task => tasks.delete(task));\n\trunning = false;\n}\n\nfunction loop(fn) {\n\tlet task;\n\n\tif (!running) {\n\t\trunning = true;\n\t\trequestAnimationFrame(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise(fulfil => {\n\t\t\ttasks.add(task = [fn, fulfil]);\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n\nfunction append(target, node) {\n\ttarget.appendChild(node);\n}\n\nfunction insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\nfunction detach(node) {\n\tnode.parentNode.removeChild(node);\n}\n\nfunction detach_between(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction detach_before(after) {\n\twhile (after.previousSibling) {\n\t\tafter.parentNode.removeChild(after.previousSibling);\n\t}\n}\n\nfunction detach_after(before) {\n\twhile (before.nextSibling) {\n\t\tbefore.parentNode.removeChild(before.nextSibling);\n\t}\n}\n\nfunction destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\nfunction element(name) {\n\treturn document.createElement(name);\n}\n\nfunction object_without_properties(obj, exclude) {\n\tconst target = {};\n\tfor (const k in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) {\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\nfunction svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction text(data) {\n\treturn document.createTextNode(data);\n}\n\nfunction space() {\n\treturn text(' ');\n}\n\nfunction empty() {\n\treturn text('');\n}\n\nfunction listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\nfunction prevent_default(fn) {\n\treturn function(event) {\n\t\tevent.preventDefault();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction stop_propagation(fn) {\n\treturn function(event) {\n\t\tevent.stopPropagation();\n\t\treturn fn.call(this, event);\n\t};\n}\n\nfunction attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse node.setAttribute(attribute, value);\n}\n\nfunction set_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tif (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key in node) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\nfunction set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\nfunction xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\nfunction get_binding_group_value(group) {\n\tconst value = [];\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.push(group[i].__value);\n\t}\n\treturn value;\n}\n\nfunction to_number(value) {\n\treturn value === '' ? undefined : +value;\n}\n\nfunction time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\nfunction children(element) {\n\treturn Array.from(element.childNodes);\n}\n\nfunction claim_element(nodes, name, attributes, svg) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeName === name) {\n\t\t\tfor (let j = 0; j < node.attributes.length; j += 1) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) node.removeAttribute(attribute.name);\n\t\t\t}\n\t\t\treturn nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n\t\t}\n\t}\n\n\treturn svg ? svg_element(name) : element(name);\n}\n\nfunction claim_text(nodes, data) {\n\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 3) {\n\t\t\tnode.data = data;\n\t\t\treturn nodes.splice(i, 1)[0];\n\t\t}\n\t}\n\n\treturn text(data);\n}\n\nfunction set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data !== data) text.data = data;\n}\n\nfunction set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\nfunction set_style(node, key, value) {\n\tnode.style.setProperty(key, value);\n}\n\nfunction select_option(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nfunction select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nfunction select_value(select) {\n\tconst selected_option = select.querySelector(':checked') || select.options[0];\n\treturn selected_option && selected_option.__value;\n}\n\nfunction select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n\nfunction add_resize_listener(element, fn) {\n\tif (getComputedStyle(element).position === 'static') {\n\t\telement.style.position = 'relative';\n\t}\n\n\tconst object = document.createElement('object');\n\tobject.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n\tobject.type = 'text/html';\n\n\tlet win;\n\n\tobject.onload = () => {\n\t\twin = object.contentDocument.defaultView;\n\t\twin.addEventListener('resize', fn);\n\t};\n\n\tif (/Trident/.test(navigator.userAgent)) {\n\t\telement.appendChild(object);\n\t\tobject.data = 'about:blank';\n\t} else {\n\t\tobject.data = 'about:blank';\n\t\telement.appendChild(object);\n\t}\n\n\treturn {\n\t\tcancel: () => {\n\t\t\twin && win.removeEventListener && win.removeEventListener('resize', fn);\n\t\t\telement.removeChild(object);\n\t\t}\n\t};\n}\n\nfunction toggle_class(element, name, toggle) {\n\telement.classList[toggle ? 'add' : 'remove'](name);\n}\n\nfunction custom_event(type, detail) {\n\tconst e = document.createEvent('CustomEvent');\n\te.initCustomEvent(type, false, false, detail);\n\treturn e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\n\tif (!current_rules[name]) {\n\t\tif (!stylesheet) {\n\t\t\tconst style = element('style');\n\t\t\tdocument.head.appendChild(style);\n\t\t\tstylesheet = style.sheet;\n\t\t}\n\n\t\tcurrent_rules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n\n\tactive += 1;\n\treturn name;\n}\n\nfunction delete_rule(node, name) {\n\tnode.style.animation = (node.style.animation || '')\n\t\t.split(', ')\n\t\t.filter(name\n\t\t\t? anim => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t\t)\n\t\t.join(', ');\n\n\tif (name && !--active) clear_rules();\n}\n\nfunction clear_rules() {\n\trequestAnimationFrame(() => {\n\t\tif (active) return;\n\t\tlet i = stylesheet.cssRules.length;\n\t\twhile (i--) stylesheet.deleteRule(i);\n\t\tcurrent_rules = {};\n\t});\n}\n\nfunction create_animation(node, from, fn, params) {\n\tif (!from) return noop;\n\n\tconst to = node.getBoundingClientRect();\n\tif (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom) return noop;\n\n\tconst {\n\t\tdelay = 0,\n\t\tduration = 300,\n\t\teasing = identity,\n\t\tstart: start_time = now() + delay,\n\t\tend = start_time + duration,\n\t\ttick = noop,\n\t\tcss\n\t} = fn(node, { from, to }, params);\n\n\tlet running = true;\n\tlet started = false;\n\tlet name;\n\n\tconst css_text = node.style.cssText;\n\n\tfunction start() {\n\t\tif (css) {\n\t\t\tif (delay) node.style.cssText = css_text; // TODO create delayed animation instead?\n\t\t\tname = create_rule(node, 0, 1, duration, 0, easing, css);\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\tfunction stop() {\n\t\tif (css) delete_rule(node, name);\n\t\trunning = false;\n\t}\n\n\tloop(now$$1 => {\n\t\tif (!started && now$$1 >= start_time) {\n\t\t\tstart();\n\t\t}\n\n\t\tif (started && now$$1 >= end) {\n\t\t\ttick(1, 0);\n\t\t\tstop();\n\t\t}\n\n\t\tif (!running) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (started) {\n\t\t\tconst p = now$$1 - start_time;\n\t\t\tconst t = 0 + 1 * easing(p / duration);\n\t\t\ttick(t, 1 - t);\n\t\t}\n\n\t\treturn true;\n\t});\n\n\tif (delay) {\n\t\tif (css) node.style.cssText += css(0, 1);\n\t} else {\n\t\tstart();\n\t}\n\n\ttick(0, 1);\n\n\treturn stop;\n}\n\nfunction fix_position(node) {\n\tconst style = getComputedStyle(node);\n\n\tif (style.position !== 'absolute' && style.position !== 'fixed') {\n\t\tconst { width, height } = style;\n\t\tconst a = node.getBoundingClientRect();\n\t\tnode.style.position = 'absolute';\n\t\tnode.style.width = width;\n\t\tnode.style.height = height;\n\t\tconst b = node.getBoundingClientRect();\n\n\t\tif (a.left !== b.left || a.top !== b.top) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\tnode.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n\t\t}\n\t}\n}\n\nlet current_component;\n\nfunction set_current_component(component) {\n\tcurrent_component = component;\n}\n\nfunction get_current_component() {\n\tif (!current_component) throw new Error(`Function called outside component initialization`);\n\treturn current_component;\n}\n\nfunction beforeUpdate(fn) {\n\tget_current_component().$$.before_render.push(fn);\n}\n\nfunction onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\nfunction afterUpdate(fn) {\n\tget_current_component().$$.after_render.push(fn);\n}\n\nfunction onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\nfunction createEventDispatcher() {\n\tconst component = current_component;\n\n\treturn (type, detail) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(type, detail);\n\t\t\tcallbacks.slice().forEach(fn => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n}\n\nfunction getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\n\tif (callbacks) {\n\t\tcallbacks.slice().forEach(fn => fn(event));\n\t}\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\n\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\n\nfunction schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\nfunction tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\nfunction add_binding_callback(fn) {\n\tbinding_callbacks.push(fn);\n}\n\nfunction add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\nfunction add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\nfunction flush() {\n\tconst seen_callbacks = new Set();\n\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\twhile (dirty_components.length) {\n\t\t\tconst component = dirty_components.shift();\n\t\t\tset_current_component(component);\n\t\t\tupdate(component.$$);\n\t\t}\n\n\t\twhile (binding_callbacks.length) binding_callbacks.shift()();\n\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\twhile (render_callbacks.length) {\n\t\t\tconst callback = render_callbacks.pop();\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\tcallback();\n\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t}\n\t\t}\n\t} while (dirty_components.length);\n\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\n\tupdate_scheduled = false;\n}\n\nfunction update($$) {\n\tif ($$.fragment) {\n\t\t$$.update($$.dirty);\n\t\trun_all($$.before_render);\n\t\t$$.fragment.p($$.dirty, $$.ctx);\n\t\t$$.dirty = null;\n\n\t\t$$.after_render.forEach(add_render_callback);\n\t}\n}\n\nlet promise;\n\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\n\treturn promise;\n}\n\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nlet outros;\n\nfunction group_outros() {\n\toutros = {\n\t\tremaining: 0,\n\t\tcallbacks: []\n\t};\n}\n\nfunction check_outros() {\n\tif (!outros.remaining) {\n\t\trun_all(outros.callbacks);\n\t}\n}\n\nfunction on_outro(callback) {\n\toutros.callbacks.push(callback);\n}\n\nfunction create_in_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick$$1(0, 1);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tif (task) task.abort();\n\t\trunning = true;\n\n\t\ttask = loop(now$$1 => {\n\t\t\tif (running) {\n\t\t\t\tif (now$$1 >= end_time) {\n\t\t\t\t\ttick$$1(1, 0);\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn running = false;\n\t\t\t\t}\n\n\t\t\t\tif (now$$1 >= start_time) {\n\t\t\t\t\tconst t = easing((now$$1 - start_time) / duration);\n\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tlet started = false;\n\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\n\t\t\tdelete_rule(node);\n\n\t\t\tif (typeof config === 'function') {\n\t\t\t\tconfig = config();\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_out_transition(node, fn, params) {\n\tlet config = fn(node, params);\n\tlet running = true;\n\tlet animation_name;\n\n\tconst group = outros;\n\n\tgroup.remaining += 1;\n\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\n\t\tloop(now$$1 => {\n\t\t\tif (running) {\n\t\t\t\tif (now$$1 >= end_time) {\n\t\t\t\t\ttick$$1(0, 1);\n\n\t\t\t\t\tif (!--group.remaining) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.callbacks);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (now$$1 >= start_time) {\n\t\t\t\t\tconst t = easing((now$$1 - start_time) / duration);\n\t\t\t\t\ttick$$1(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (typeof config === 'function') {\n\t\twait().then(() => {\n\t\t\tconfig = config();\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction create_bidirectional_transition(node, fn, params, intro) {\n\tlet config = fn(node, params);\n\n\tlet t = intro ? 0 : 1;\n\n\tlet running_program = null;\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\tfunction init(program, duration) {\n\t\tconst d = program.b - t;\n\t\tduration *= Math.abs(d);\n\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = identity,\n\t\t\ttick: tick$$1 = noop,\n\t\t\tcss\n\t\t} = config;\n\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\tprogram.group = outros;\n\t\t\toutros.remaining += 1;\n\t\t}\n\n\t\tif (running_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\n\t\t\tif (b) tick$$1(0, 1);\n\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\n\t\t\tloop(now$$1 => {\n\t\t\t\tif (pending_program && now$$1 > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now$$1 >= running_program.end) {\n\t\t\t\t\t\ttick$$1(t = running_program.b, 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.remaining) run_all(running_program.group.callbacks);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (now$$1 >= running_program.start) {\n\t\t\t\t\t\tconst p = now$$1 - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick$$1(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\trun(b) {\n\t\t\tif (typeof config === 'function') {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconfig = config();\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\nfunction handle_promise(promise, info) {\n\tconst token = info.token = {};\n\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\n\t\tinfo.resolved = key && { [key]: value };\n\n\t\tconst child_ctx = assign(assign({}, info.ctx), info.resolved);\n\t\tconst block = type && (info.current = type)(child_ctx);\n\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ton_outro(() => {\n\t\t\t\t\t\t\tblock.d(1);\n\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tblock.o(1);\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\n\t\t\tblock.c();\n\t\t\tif (block.i) block.i(1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\n\t\t\tflush();\n\t\t}\n\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t}\n\n\tif (is_promise(promise)) {\n\t\tpromise.then(value => {\n\t\t\tupdate(info.then, 1, info.value, value);\n\t\t}, error => {\n\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t});\n\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\n\t\tinfo.resolved = { [info.value]: promise };\n\t}\n}\n\nfunction destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\nfunction outro_and_destroy_block(block, lookup) {\n\ton_outro(() => {\n\t\tdestroy_block(block, lookup);\n\t});\n\n\tblock.o(1);\n}\n\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\tblock.p(changed, child_ctx);\n\t\t}\n\n\t\tnew_lookup.set(key, new_blocks[i] = block);\n\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\n\tfunction insert(block) {\n\t\tif (block.i) block.i(1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t}\n\n\t\telse if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t}\n\n\t\telse if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t}\n\n\t\telse if (did_move.has(old_key)) {\n\t\t\to--;\n\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\n\twhile (n) insert(new_blocks[n - 1]);\n\n\treturn new_blocks;\n}\n\nfunction measure(blocks) {\n\tconst rects = {};\n\tlet i = blocks.length;\n\twhile (i--) rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n\treturn rects;\n}\n\nfunction get_spread_update(levels, updates) {\n\tconst update = {};\n\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\n\treturn update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\n\nfunction spread(args) {\n\tconst attributes = Object.assign({}, ...args);\n\tlet str = '';\n\n\tObject.keys(attributes).forEach(name => {\n\t\tif (invalid_attribute_name_character.test(name)) return;\n\n\t\tconst value = attributes[name];\n\t\tif (value === undefined) return;\n\t\tif (value === true) str += \" \" + name;\n\n\t\tconst escaped = String(value)\n\t\t\t.replace(/\"/g, '&#34;')\n\t\t\t.replace(/'/g, '&#39;');\n\n\t\tstr += \" \" + name + \"=\" + JSON.stringify(escaped);\n\t});\n\n\treturn str;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;'\n};\n\nfunction escape(html) {\n\treturn String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\n\nfunction each(items, fn) {\n\tlet str = '';\n\tfor (let i = 0; i < items.length; i += 1) {\n\t\tstr += fn(items[i], i);\n\t}\n\treturn str;\n}\n\nconst missing_component = {\n\t$$render: () => ''\n};\n\nfunction validate_component(component, name) {\n\tif (!component || !component.$$render) {\n\t\tif (name === 'svelte:component') name += ' this={...}';\n\t\tthrow new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n\t}\n\n\treturn component;\n}\n\nfunction debug(file, line, column, values) {\n\tconsole.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n\tconsole.log(values); // eslint-disable-line no-console\n\treturn '';\n}\n\nlet on_destroy;\n\nfunction create_ssr_component(fn) {\n\tfunction $$render(result, props, bindings, slots) {\n\t\tconst parent_component = current_component;\n\n\t\tconst $$ = {\n\t\t\ton_destroy,\n\t\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t\t// these will be immediately discarded\n\t\t\ton_mount: [],\n\t\t\tbefore_render: [],\n\t\t\tafter_render: [],\n\t\t\tcallbacks: blank_object()\n\t\t};\n\n\t\tset_current_component({ $$ });\n\n\t\tconst html = fn(result, props, bindings, slots);\n\n\t\tset_current_component(parent_component);\n\t\treturn html;\n\t}\n\n\treturn {\n\t\trender: (props = {}, options = {}) => {\n\t\t\ton_destroy = [];\n\n\t\t\tconst result = { head: '', css: new Set() };\n\t\t\tconst html = $$render(result, props, {}, options);\n\n\t\t\trun_all(on_destroy);\n\n\t\t\treturn {\n\t\t\t\thtml,\n\t\t\t\tcss: {\n\t\t\t\t\tcode: Array.from(result.css).map(css => css.code).join('\\n'),\n\t\t\t\t\tmap: null // TODO\n\t\t\t\t},\n\t\t\t\thead: result.head\n\t\t\t};\n\t\t},\n\n\t\t$$render\n\t};\n}\n\nfunction get_store_value(store) {\n\tlet value;\n\tstore.subscribe(_ => value = _)();\n\treturn value;\n}\n\nfunction bind(component, name, callback) {\n\tif (component.$$.props.indexOf(name) === -1) return;\n\tcomponent.$$.bound[name] = callback;\n\tcallback(component.$$.ctx[name]);\n}\n\nfunction mount_component(component, target, anchor) {\n\tconst { fragment, on_mount, on_destroy, after_render } = component.$$;\n\n\tfragment.m(target, anchor);\n\n\t// onMount happens after the initial afterUpdate. Because\n\t// afterUpdate callbacks happen in reverse order (inner first)\n\t// we schedule onMount callbacks before afterUpdate callbacks\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = on_mount.map(run).filter(is_function);\n\t\tif (on_destroy) {\n\t\t\ton_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\n\tafter_render.forEach(add_render_callback);\n}\n\nfunction destroy(component, detaching) {\n\tif (component.$$) {\n\t\trun_all(component.$$.on_destroy);\n\t\tcomponent.$$.fragment.d(detaching);\n\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\tcomponent.$$.on_destroy = component.$$.fragment = null;\n\t\tcomponent.$$.ctx = {};\n\t}\n}\n\nfunction make_dirty(component, key) {\n\tif (!component.$$.dirty) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty = blank_object();\n\t}\n\tcomponent.$$.dirty[key] = true;\n}\n\nfunction init(component, options, instance, create_fragment, not_equal$$1, prop_names) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\n\tconst props = options.props || {};\n\n\tconst $$ = component.$$ = {\n\t\tfragment: null,\n\t\tctx: null,\n\n\t\t// state\n\t\tprops: prop_names,\n\t\tupdate: noop,\n\t\tnot_equal: not_equal$$1,\n\t\tbound: blank_object(),\n\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\tbefore_render: [],\n\t\tafter_render: [],\n\t\tcontext: new Map(parent_component ? parent_component.$$.context : []),\n\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty: null\n\t};\n\n\tlet ready = false;\n\n\t$$.ctx = instance\n\t\t? instance(component, props, (key, value) => {\n\t\t\tif ($$.ctx && not_equal$$1($$.ctx[key], $$.ctx[key] = value)) {\n\t\t\t\tif ($$.bound[key]) $$.bound[key](value);\n\t\t\t\tif (ready) make_dirty(component, key);\n\t\t\t}\n\t\t})\n\t\t: props;\n\n\t$$.update();\n\tready = true;\n\trun_all($$.before_render);\n\t$$.fragment = create_fragment($$.ctx);\n\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\t$$.fragment.l(children(options.target));\n\t\t} else {\n\t\t\t$$.fragment.c();\n\t\t}\n\n\t\tif (options.intro && component.$$.fragment.i) component.$$.fragment.i();\n\t\tmount_component(component, options.target, options.anchor);\n\t\tflush();\n\t}\n\n\tset_current_component(parent_component);\n}\n\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n\tSvelteElement = class extends HTMLElement {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t}\n\n\t\tconnectedCallback() {\n\t\t\tfor (const key in this.$$.slotted) {\n\t\t\t\tthis.appendChild(this.$$.slotted[key]);\n\t\t\t}\n\t\t}\n\n\t\tattributeChangedCallback(attr$$1, oldValue, newValue) {\n\t\t\tthis[attr$$1] = newValue;\n\t\t}\n\n\t\t$destroy() {\n\t\t\tdestroy(this, true);\n\t\t\tthis.$destroy = noop;\n\t\t}\n\n\t\t$on(type, callback) {\n\t\t\t// TODO should this delegate to addEventListener?\n\t\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\t\tcallbacks.push(callback);\n\n\t\t\treturn () => {\n\t\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t};\n\t\t}\n\n\t\t$set() {\n\t\t\t// overridden by instance, if it has props\n\t\t}\n\t};\n}\n\nclass SvelteComponent {\n\t$destroy() {\n\t\tdestroy(this, true);\n\t\tthis.$destroy = noop;\n\t}\n\n\t$on(type, callback) {\n\t\tconst callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n\t\tcallbacks.push(callback);\n\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t$set() {\n\t\t// overridden by instance, if it has props\n\t}\n}\n\nclass SvelteComponentDev extends SvelteComponent {\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(`'target' is a required option`);\n\t\t}\n\n\t\tsuper();\n\t}\n\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn(`Component was already destroyed`); // eslint-disable-line no-console\n\t\t};\n\t}\n}\n\nexport { create_animation, fix_position, handle_promise, append, insert, detach, detach_between, detach_before, detach_after, destroy_each, element, object_without_properties, svg_element, text, space, empty, listen, prevent_default, stop_propagation, attr, set_attributes, set_custom_element_data, xlink_attr, get_binding_group_value, to_number, time_ranges_to_array, children, claim_element, claim_text, set_data, set_input_type, set_style, select_option, select_options, select_value, select_multiple_value, add_resize_listener, toggle_class, custom_event, destroy_block, outro_and_destroy_block, fix_and_outro_and_destroy_block, update_keyed_each, measure, current_component, set_current_component, beforeUpdate, onMount, afterUpdate, onDestroy, createEventDispatcher, setContext, getContext, bubble, clear_loops, loop, dirty_components, intros, schedule_update, tick, add_binding_callback, add_render_callback, add_flush_callback, flush, get_spread_update, invalid_attribute_name_character, spread, escaped, escape, each, missing_component, validate_component, debug, create_ssr_component, get_store_value, group_outros, check_outros, on_outro, create_in_transition, create_out_transition, create_bidirectional_transition, noop, identity, assign, is_promise, add_location, run, blank_object, run_all, is_function, safe_not_equal, not_equal, validate_store, subscribe, create_slot, get_slot_context, get_slot_changes, exclude_internal_props, now, set_now, bind, mount_component, init, SvelteElement, SvelteComponent, SvelteComponentDev };\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  const dispatch = createEventDispatcher();\r\n  export let row;\r\n  export let col;\r\n  export let activePlayer;\r\n  \r\n  let active = true;\r\n  let player = '';\r\n\r\n  function makeStep() {\r\n    if (active) {\r\n      dispatch('step', { row, col });\r\n      active = false;\r\n      player = activePlayer;\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    flex-shrink: 0;\r\n    width: 110px;\r\n    height: 110px;\r\n    background-color: #ddd;\r\n    border: 1px solid #000;\r\n    margin: 1px;\r\n    cursor: pointer;\r\n    transition: background-color, .4s;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: #34495e;\r\n  }\r\n\r\n  .inactive {\r\n    background-color: #ecf0f1;\r\n    cursor: not-allowed;\r\n    animation: pulse 1s;\r\n  }\r\n\r\n  .inactive.x, .inactive.o {\r\n    position: relative;\r\n  }\r\n\r\n  .inactive.x:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 75%;\r\n    height: 20%;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%) rotateZ(45deg);\r\n    background: #000;\r\n  }\r\n\r\n  .inactive.x:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%) rotateZ(45deg);\r\n    width: 20%;\r\n    height: 75%;\r\n    background-color: #000;\r\n  }\r\n\r\n  .inactive.o:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 50%;\r\n    width: 75%;\r\n    height: 75%;\r\n    background: #1abc9c;\r\n  }\r\n\r\n  .inactive.o:after{\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 50%;\r\n    width: 50%;\r\n    height: 50%;\r\n    background-color: #ecf0f1;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    from {\r\n      transform: scale3d(1, 1, 1);\r\n    }\r\n\r\n    50% {\r\n      transform: scale3d(1.1, 1.1, 1.1);\r\n    }\r\n\r\n    to {\r\n      transform: scale3d(1, 1, 1);\r\n    }\r\n  }\r\n</style>\r\n\r\n<button \r\n  class:inactive={!active} \r\n  class:x={player === 'X'} \r\n  class:o={player === 'O'} \r\n  on:click=\"{makeStep}\"\r\n>\r\n</button>","<script>\r\n  import Cell from './Cell.svelte';\r\n\r\n  export let scale;\r\n  export let activePlayer;\r\n  let scaleArr = [];\r\n  \r\n  $: for (let i = 0; i < scale; i++) { \r\n    scaleArr.push(i);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .board {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 5px;\r\n    max-width: 900px;\r\n    overflow-x: scroll;\r\n  }\r\n  .row {\r\n    display: flex;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <div class=\"board\">\r\n    {#each scaleArr as {}, row}\r\n      <div class=\"row\">\r\n        {#each scaleArr as {}, col}\r\n          <Cell {row} {col} {activePlayer} on:step></Cell>\r\n        {/each}\r\n      </div>\r\n    {/each}\r\n  </div>\r\n</main>","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  const dispatch = createEventDispatcher();\r\n  let scale = 3;\r\n\r\n  function startGame() {\r\n    dispatch('start', scale);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    background: #f3f3f3;\r\n    padding: 10px;\r\n  }\r\n\r\n  form, label {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  input {\r\n    width: 60px;\r\n    min-height: 35px;\r\n    font-size: 18px;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 2px;\r\n    text-align: center;\r\n  }\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n</style>\r\n\r\n<form on:submit|preventDefault={startGame}>\r\n  <label>\r\n    <span>Размер поля:</span><input type=\"number\" min=\"3\" max=\"15\" bind:value=\"{scale}\">\r\n  </label> \r\n  <button class=\"btn\" type=\"submit\">Начать игру</button>\r\n</form>\r\n  ","<script>\r\n  export let matches = 0;\r\n  export let wins = {};\r\n</script>\r\n\r\n<style>\r\n  header {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  h1 {\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n\r\n  .info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: #3498db;\r\n    color: #fff;\r\n  }\r\n  span {\r\n    margin: 10px;\r\n  }\r\n</style>\r\n\r\n<header>\r\n  <h1>\r\n    Крестики нолики\r\n  </h1>\r\n  <div class=\"info\">\r\n    <span>\r\n    0 победил {wins.O} раз\r\n    </span>\r\n    <span>\r\n      Матч № {matches}\r\n    </span>\r\n    <span>\r\n      X победил {wins.X} раз\r\n    </span> \r\n  </div>\r\n</header>","<script>\n  import Board from './components/Board.svelte';\n  import Setup from './components/Setup.svelte';\n  import Score from './components/Score.svelte';\n  \n  let matches = 0;\n  let wins = { O: 0, X: 0 };\n  let scale = 3;\n  let gameStatus = 'start';\n  let board = {};\n  let mirrorBoard = {};\n  let activePlayer = 'X';\n  let moves = 0;\n\n  $: for (let row = 0; row < scale; row++) { \n    board[row] = {};\n    mirrorBoard[row] = {};\n    \n    for (let col = 0; col < scale; col++) {\n      board[row][col] = '!';\n      mirrorBoard[row][col] = 'f';\n    }\n  }\n\n  $: notActivePlayer = activePlayer === 'X' \n    ? 'O'\n    : 'X';\n\n  function startGame(event) {\n    scale = event.detail;\n    gameStatus = 'turn';\n  }\n\n  function restart() {\n    scale = 0;\n    moves = 0;\n    gameStatus = 'start';\n  }\n\n  function makeStep(event) {\n    moves++;\n    updateBoards(event.detail);\n    updateGameStatus();\n    updateActivePlayer();\n  }\n\n  function updateBoards(info) {\n    board[info.row][info.col] = activePlayer;\n    mirrorBoard[info.col][info.row] = activePlayer;\n  }\n\n  function updateGameStatus() {\n    if (moves === scale * scale) {\n      gameStatus = 'draw';\n      matches++;\n    }\n    else if (isActivePlayerWin()) {\n      gameStatus = 'win';\n      matches++;\n      wins[activePlayer]++;\n    }\n  }\n\n  function updateActivePlayer() {\n    activePlayer = notActivePlayer;\n  }\n\n  function isActivePlayerWin() {\n    return isWinByСross(board) \n      || isWinByСross(mirrorBoard) \n      || isWinBySlash();\n  }\n\n  function isWinByСross(activeBoard) {\n    const rows = Object.keys(activeBoard)\n\n    for (const row of rows) {\n      if (Object.values(activeBoard[row]).every(val => val === activePlayer)) {        \n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function isWinBySlash() {\n    const slash = [];\n    const backSlash = [];\n\n    for (let i = 0; i < scale; i++) {\n      for (let j = 0; j < scale; j++) {\n        if (i === j) {\n          slash.push(board[i][j]);\n        } \n        else if (i + j === scale - 1) {\n          backSlash.push(mirrorBoard[i][j]);\n        } \n      }\n    }\n\n    if (slash.every(val => val === activePlayer) || backSlash.every(val => val === activePlayer)) {        \n      return true;\n    }\n\n    return false;\n  }\n\n</script>\n\n<style>\n\t#app {\n    position: absolute;\n    left: 50%;\n    top: 20%;\n    transform: translateX(-50%);\n    display: inline-flex;\n    flex-direction: column;\n    margin: 0 auto;\n\t\tcolor: #2c3e50;\n\t\tborder: 1px solid #000;\n  }\n\n  .info {\n    text-align: center;\n  }\n\n  .results {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n</style>\n\n\n<div id=\"app\">\n  <Score {matches}, {wins}></Score>\n  { #if gameStatus == 'start'}\n    <Setup on:start={startGame}></Setup>\n  {:else if gameStatus == 'turn'}\n    <div class=\"info\">\n      <p>Ход игрока {activePlayer} </p>\n    </div>\n    <Board {scale}, {activePlayer} on:step={makeStep}></Board>\n  {:else}\n    <div class=\"results\">\n      <p> Игрок {notActivePlayer} победил </p>\n      <button class=\"btn\" on:click={restart}>Начать новую игру</button>\n    </div>\n  {/if}\n</div>","import App from './App.svelte';\n\nconst app = new App({\n    target: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","set_data","toggle_class","toggle","classList","current_component","set_current_component","component","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","resolved_promise","Promise","resolve","update_scheduled","binding_callbacks","render_callbacks","flush_callbacks","add_render_callback","push","flush","seen_callbacks","Set","shift","update","callback","pop","has","add","fragment","dirty","before_render","p","ctx","after_render","outros","group_outros","remaining","check_outros","on_outro","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","make_dirty","key","then","init","instance","create_fragment","not_equal$$1","prop_names","parent_component","props","not_equal","bound","context","Map","ready","value","hydrate","l","Array","from","childNodes","c","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","active","player","makeStep","dispatch","row","col","activePlayer","scaleArr","scale","attribute","removeAttribute","setAttribute","startGame","preventDefault","undefined","wins","O","X","matches","notActivePlayer","restart","gameStatus","board","mirrorBoard","moves","isWinByСross","activeBoard","rows","keys","values","every","val","info","slash","backSlash","j","isWinBySlash","body"],"mappings":"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"}